{"ast":null,"code":"var _jsxFileName = \"/Users/danialross/Documents/React/OnlineStore/src/components/Panel.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { Container, Nav, Navbar, Dropdown, Modal, Form, Button } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport StyledButton from \"./StyledButton\";\nimport Footer from \"./Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledNavbar = styled(Navbar)`\n  background-color: #89abe3;\n  height: 5rem;\n  outline: 8px solid white;\n`;\n_c = StyledNavbar;\nconst StyledBrand = styled(NavLink)`\n  text-decoration: none;\n  font-size: 2rem;\n  color: white;\n  white-space: nowrap;\n  margin-right: 3rem;\n\n  &:hover {\n    color: #edcac4;\n  }\n`;\n_c2 = StyledBrand;\nconst StyledNav = styled(Nav)`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n`;\n_c3 = StyledNav;\nconst StyledLink = styled(NavLink)`\n  text-decoration: none;\n  font-size: 1.4rem;\n  color: white;\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n  margin-right: 1em;\n  display: flex;\n  align-items: center;\n  justify-items: center;\n  height: 6rem;\n\n  &:hover {\n    color: #edcac4;\n  }\n\n  &.active {\n    color: #edcac4;\n  }\n\n  &:not(:last-child) {\n    text-decoration: none;\n    font-size: 1.4rem;\n    color: white;\n    padding-top: 1rem;\n    padding-bottom: 1rem;\n    margin-right: 2em;\n    display: flex;\n    align-items: center;\n    justify-items: center;\n    height: 6rem;\n\n    &:hover {\n      color: #edcac4;\n    }\n\n    &.active {\n      color: #edcac4;\n    }\n  }\n`;\n_c4 = StyledLink;\nconst StyledDropDown = styled(Dropdown.Toggle)`\n  background-color: white;\n  color: #89abe3;\n  border-radius: 5px;\n  border-color: white;\n\n  &:hover {\n    color: white;\n    background-color: #edcac4;\n    border-color: #edcac4;\n  }\n\n  &:active {\n    color: white;\n    background-color: #edcac4;\n    border-color: #edcac4;\n  }\n`;\n_c5 = StyledDropDown;\nconst StyledItem = styled(Dropdown.Item)`\n  color: #89abe3;\n\n  &:hover {\n    color: white;\n    background-color: #edcac4;\n    border-color: #edcac4;\n  }\n\n  &:active {\n    color: white;\n    background-color: #edcac4;\n    border-color: #edcac4;\n  }\n`;\n_c6 = StyledItem;\nconst StyledGroup = styled(Form.Group)`\n  margin-bottom: 1rem;\n`;\n_c7 = StyledGroup;\nconst ClickableText = styled.div`\n  margin-top: 1rem;\n\n  width: 4rem;\n  color: blue;\n  cursor: pointer;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n_c8 = ClickableText;\nconst StyledFooter = styled(Modal.Footer)`\n  display: flex;\n  justify-content: space-between;\n`;\n_c9 = StyledFooter;\nconst ErrorControl = styled(Form.Control)`\n  border-color: red;\n`;\n_c10 = ErrorControl;\nconst ErrorText = styled(Form.Text)`\n  color: red;\n`;\n_c11 = ErrorText;\nconst SuccessText = styled(Form.Text)`\n  color: green;\n`;\n_c12 = SuccessText;\nfunction Panel(props) {\n  _s();\n  const [user, setUser] = useState({\n    username: \"\",\n    token: \"\"\n  });\n  const [username, setUsername] = useState(\"\");\n  const [isUsernameValid, setIsUsernameValid] = useState(true);\n  const [password, setPassword] = useState(\"\");\n  const [isPasswordValid, setIsPasswordValid] = useState(true);\n  const [retyped, setRetyped] = useState(\"\");\n  const [isRetypedValid, setIsRetypedValid] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showLogin, setShowLogin] = useState(false);\n  const [showRegister, setShowRegister] = useState(false);\n  const [showLoginMessage, setShowLoginMessage] = useState(false);\n  const [showRegisteredMessage, setShowRegisteredMessage] = useState(false);\n  const clearInput = isLoggingIn => {\n    //isLoggingIn can be true for validating during logging in or false for validating during registering\n    setUsername(\"\");\n    setPassword(\"\");\n    if (!isLoggingIn) {\n      setRetyped(\"\");\n    }\n  };\n  const handleShowLogin = () => {\n    setShowLogin(true);\n  };\n  const handleCloseLogin = () => {\n    setErrorMessage(\"\");\n    setIsUsernameValid(true);\n    setIsPasswordValid(true);\n    setShowLogin(false);\n    clearInput(true);\n  };\n  const handleShowRegister = () => {\n    setShowRegister(true);\n  };\n  const handleCloseRegister = () => {\n    setErrorMessage(\"\");\n    setIsUsernameValid(true);\n    setIsPasswordValid(true);\n    setIsRetypedValid(true);\n    setShowRegister(false);\n    clearInput(false);\n  };\n  const isInputValid = isLoggingIn => {\n    //isLoggingIn can be true for validating during logging in or false for validating during registering\n\n    if (!isLoggingIn) {\n      if (retyped.length === 0) {\n        setIsRetypedValid(false);\n      } else {\n        setIsRetypedValid(true);\n      }\n    }\n    if (username.length === 0 || password.length === 0) {\n      if (username.length === 0) {\n        setIsUsernameValid(false);\n      } else {\n        setIsUsernameValid(true);\n      }\n      if (password.length === 0) {\n        setIsPasswordValid(false);\n      } else {\n        setIsPasswordValid(true);\n      }\n      setErrorMessage(\"\");\n      return false;\n    }\n    setIsUsernameValid(true);\n    setIsPasswordValid(true);\n    return true;\n  };\n  const handleChangeModal = () => {\n    handleCloseLogin();\n    handleShowRegister();\n  };\n  const handleLogin = () => {\n    if (!isInputValid(true)) {\n      return;\n    }\n    const url = \"http://localhost:3000/login\";\n    const login = {\n      username: username,\n      password: password\n    };\n    axios.post(url, login).then(res => {\n      console.log(res.data);\n      if (res.data.token === \"\") {\n        setErrorMessage(\"Invalid username or password.\");\n      } else {\n        const userData = {\n          username: username,\n          token: res.data.token\n        };\n        setUser(userData);\n        setIsLoggedin(true);\n        handleCloseLogin();\n      }\n    }).catch(err => {\n      console.err({\n        error: err\n      });\n    });\n  };\n  const handleRegister = () => {\n    if (!isInputValid(false)) {\n      return;\n    }\n    if (password !== retyped) {\n      setErrorMessage(\"Passwords do not match\");\n      return;\n    }\n    const url = \"http://localhost:3000/register\";\n    const register = {\n      username: username,\n      password: password\n    };\n    axios.post(url, register).catch(err => {\n      console.err({\n        error: err\n      });\n    });\n    handleCloseRegister();\n    handleShowMessage();\n    setIsRegistered(true);\n  };\n  const handleChange = setter => e => {\n    setter(e.target.value.trim());\n  };\n\n  // const handleEnterKey = (isLoggingIn) => {\n  //   return (event) => {\n  //     if (event.key === \"Enter\" && isLoggingIn) {\n  //       handleLogin();\n  //     } else if (event.key === \"Enter\" && !isLoggingIn) {\n  //       handleRegister();\n  //     }\n  //   };\n  // };\n\n  const handleShowLoggedInMessage = () => {\n    setShowRegisteredMessage(true);\n  };\n  const handleCloseLoggedInMessage = () => {\n    setShowRegisteredMessage(false);\n  };\n  const handleShowRegisteredMessage = () => {\n    setShowRegisteredMessage(true);\n  };\n  const handleCloseRegisteredMessage = () => {\n    setShowRegisteredMessage(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StyledNavbar, {\n      fixed: \"top\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(StyledBrand, {\n          to: \"/\",\n          children: \"Online Store\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledNav, {\n          children: [/*#__PURE__*/_jsxDEV(StyledLink, {\n            to: \"/for-him\",\n            children: \"For Him\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledLink, {\n            to: \"/for-her\",\n            children: \"For Her\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), user.username === \"\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(StyledButton, {\n            variant: \"secondary\",\n            text: \"Login\",\n            onClick: handleShowLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            show: showLogin,\n            onHide: handleCloseLogin,\n            children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n              children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                children: [/*#__PURE__*/_jsxDEV(StyledGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Username\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 23\n                  }, this), isUsernameValid ? /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    value: username,\n                    onChange: handleChange(setUsername)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(ErrorControl, {\n                      type: \"text\",\n                      value: username,\n                      onChange: handleChange(setUsername)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 355,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorText, {\n                      children: \"Username is empty\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 360,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(StyledGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 365,\n                    columnNumber: 23\n                  }, this), isPasswordValid ? /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"password\",\n                    value: password,\n                    onChange: handleChange(setPassword)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 367,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(ErrorControl, {\n                      type: \"password\",\n                      value: password,\n                      onChange: handleChange(setPassword)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 374,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorText, {\n                      children: \"Password is empty\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 379,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ClickableText, {\n                  onClick: handleChangeModal,\n                  children: \"Register\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 21\n                }, this), errorMessage !== \"\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorText, {\n                    children: errorMessage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StyledFooter, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"danger\",\n                onClick: handleCloseLogin,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n                variant: \"secondary\",\n                text: \"Login\",\n                onClick: handleLogin\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            show: showRegister,\n            onHide: handleCloseRegister,\n            children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n              children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                children: [/*#__PURE__*/_jsxDEV(StyledGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Username\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 413,\n                    columnNumber: 23\n                  }, this), isUsernameValid ? /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    value: username,\n                    onChange: handleChange(setUsername)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 415,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(ErrorControl, {\n                      type: \"text\",\n                      value: username,\n                      onChange: handleChange(setUsername)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 422,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorText, {\n                      children: \"Username is empty\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 427,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(StyledGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 432,\n                    columnNumber: 23\n                  }, this), isPasswordValid ? /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"password\",\n                    value: password,\n                    onChange: handleChange(setPassword)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 434,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(ErrorControl, {\n                      type: \"password\",\n                      value: password,\n                      onChange: handleChange(setPassword)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 441,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorText, {\n                      children: \"Password is empty\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 446,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(StyledGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Re-type Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 451,\n                    columnNumber: 23\n                  }, this), isRetypedValid ? /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"password\",\n                    value: retyped,\n                    onChange: handleChange(setRetyped)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 453,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(ErrorControl, {\n                      type: \"password\",\n                      value: retyped,\n                      onChange: handleChange(setRetyped)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 460,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(ErrorText, {\n                      children: \"Retyped password is empty\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 465,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 21\n                }, this), errorMessage !== \"\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 471,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(ErrorText, {\n                    children: errorMessage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 472,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StyledFooter, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"danger\",\n                onClick: handleCloseRegister,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n                variant: \"secondary\",\n                text: \"Register\",\n                onClick: handleRegister\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            show: showMessage,\n            onHide: handleCloseMessage,\n            children: [/*#__PURE__*/_jsxDEV(Modal.Header, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n              children: [isLoggedin ? /*#__PURE__*/_jsxDEV(SuccessText, {\n                children: \"Login successful\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 21\n              }, this) : null, isRegistered ? /*#__PURE__*/_jsxDEV(SuccessText, {\n                children: \"Account successful registered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 21\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n              children: /*#__PURE__*/_jsxDEV(StyledFooter, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"danger\",\n                  onClick: handleCloseMessage,\n                  children: \"Close\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n                  variant: \"secondary\",\n                  text: \"Login\",\n                  onClick: handleShowLogin\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(Dropdown, {\n          children: [/*#__PURE__*/_jsxDEV(StyledDropDown, {\n            id: \"dropdown-basic\",\n            variant: \"secondary\",\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            children: [/*#__PURE__*/_jsxDEV(StyledItem, {\n              href: \"#/action-1\",\n              children: \"Cart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StyledItem, {\n              href: \"#/action-2\",\n              children: \"Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StyledItem, {\n              href: \"#/action-3\",\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), props.children, /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Panel, \"Ihya4QWafLq6k2CUZ6n4HfEspyc=\");\n_c13 = Panel;\nexport default Panel;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n$RefreshReg$(_c, \"StyledNavbar\");\n$RefreshReg$(_c2, \"StyledBrand\");\n$RefreshReg$(_c3, \"StyledNav\");\n$RefreshReg$(_c4, \"StyledLink\");\n$RefreshReg$(_c5, \"StyledDropDown\");\n$RefreshReg$(_c6, \"StyledItem\");\n$RefreshReg$(_c7, \"StyledGroup\");\n$RefreshReg$(_c8, \"ClickableText\");\n$RefreshReg$(_c9, \"StyledFooter\");\n$RefreshReg$(_c10, \"ErrorControl\");\n$RefreshReg$(_c11, \"ErrorText\");\n$RefreshReg$(_c12, \"SuccessText\");\n$RefreshReg$(_c13, \"Panel\");","map":{"version":3,"names":["useState","styled","axios","Container","Nav","Navbar","Dropdown","Modal","Form","Button","NavLink","StyledButton","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledNavbar","_c","StyledBrand","_c2","StyledNav","_c3","StyledLink","_c4","StyledDropDown","Toggle","_c5","StyledItem","Item","_c6","StyledGroup","Group","_c7","ClickableText","div","_c8","StyledFooter","_c9","ErrorControl","Control","_c10","ErrorText","Text","_c11","SuccessText","_c12","Panel","props","_s","user","setUser","username","token","setUsername","isUsernameValid","setIsUsernameValid","password","setPassword","isPasswordValid","setIsPasswordValid","retyped","setRetyped","isRetypedValid","setIsRetypedValid","errorMessage","setErrorMessage","showLogin","setShowLogin","showRegister","setShowRegister","showLoginMessage","setShowLoginMessage","showRegisteredMessage","setShowRegisteredMessage","clearInput","isLoggingIn","handleShowLogin","handleCloseLogin","handleShowRegister","handleCloseRegister","isInputValid","length","handleChangeModal","handleLogin","url","login","post","then","res","console","log","data","userData","setIsLoggedin","catch","err","error","handleRegister","register","handleShowMessage","setIsRegistered","handleChange","setter","e","target","value","trim","handleShowLoggedInMessage","handleCloseLoggedInMessage","handleShowRegisteredMessage","handleCloseRegisteredMessage","children","fixed","to","fileName","_jsxFileName","lineNumber","columnNumber","variant","text","onClick","show","onHide","Header","Title","Body","Label","type","onChange","showMessage","handleCloseMessage","isLoggedin","isRegistered","id","Menu","href","Divider","_c13","$RefreshReg$"],"sources":["/Users/danialross/Documents/React/OnlineStore/src/components/Panel.js"],"sourcesContent":["import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport {\n  Container,\n  Nav,\n  Navbar,\n  Dropdown,\n  Modal,\n  Form,\n  Button,\n} from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport StyledButton from \"./StyledButton\";\nimport Footer from \"./Footer\";\n\nconst StyledNavbar = styled(Navbar)`\n  background-color: #89abe3;\n  height: 5rem;\n  outline: 8px solid white;\n`;\n\nconst StyledBrand = styled(NavLink)`\n  text-decoration: none;\n  font-size: 2rem;\n  color: white;\n  white-space: nowrap;\n  margin-right: 3rem;\n\n  &:hover {\n    color: #edcac4;\n  }\n`;\n\nconst StyledNav = styled(Nav)`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n`;\n\nconst StyledLink = styled(NavLink)`\n  text-decoration: none;\n  font-size: 1.4rem;\n  color: white;\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n  margin-right: 1em;\n  display: flex;\n  align-items: center;\n  justify-items: center;\n  height: 6rem;\n\n  &:hover {\n    color: #edcac4;\n  }\n\n  &.active {\n    color: #edcac4;\n  }\n\n  &:not(:last-child) {\n    text-decoration: none;\n    font-size: 1.4rem;\n    color: white;\n    padding-top: 1rem;\n    padding-bottom: 1rem;\n    margin-right: 2em;\n    display: flex;\n    align-items: center;\n    justify-items: center;\n    height: 6rem;\n\n    &:hover {\n      color: #edcac4;\n    }\n\n    &.active {\n      color: #edcac4;\n    }\n  }\n`;\n\nconst StyledDropDown = styled(Dropdown.Toggle)`\n  background-color: white;\n  color: #89abe3;\n  border-radius: 5px;\n  border-color: white;\n\n  &:hover {\n    color: white;\n    background-color: #edcac4;\n    border-color: #edcac4;\n  }\n\n  &:active {\n    color: white;\n    background-color: #edcac4;\n    border-color: #edcac4;\n  }\n`;\n\nconst StyledItem = styled(Dropdown.Item)`\n  color: #89abe3;\n\n  &:hover {\n    color: white;\n    background-color: #edcac4;\n    border-color: #edcac4;\n  }\n\n  &:active {\n    color: white;\n    background-color: #edcac4;\n    border-color: #edcac4;\n  }\n`;\n\nconst StyledGroup = styled(Form.Group)`\n  margin-bottom: 1rem;\n`;\n\nconst ClickableText = styled.div`\n  margin-top: 1rem;\n\n  width: 4rem;\n  color: blue;\n  cursor: pointer;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst StyledFooter = styled(Modal.Footer)`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst ErrorControl = styled(Form.Control)`\n  border-color: red;\n`;\n\nconst ErrorText = styled(Form.Text)`\n  color: red;\n`;\n\nconst SuccessText = styled(Form.Text)`\n  color: green;\n`;\n\nfunction Panel(props) {\n  const [user, setUser] = useState({ username: \"\", token: \"\" });\n  const [username, setUsername] = useState(\"\");\n  const [isUsernameValid, setIsUsernameValid] = useState(true);\n  const [password, setPassword] = useState(\"\");\n  const [isPasswordValid, setIsPasswordValid] = useState(true);\n  const [retyped, setRetyped] = useState(\"\");\n  const [isRetypedValid, setIsRetypedValid] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showLogin, setShowLogin] = useState(false);\n  const [showRegister, setShowRegister] = useState(false);\n  const [showLoginMessage, setShowLoginMessage] = useState(false);\n  const [showRegisteredMessage, setShowRegisteredMessage] = useState(false);\n\n  const clearInput = (isLoggingIn) => {\n    //isLoggingIn can be true for validating during logging in or false for validating during registering\n    setUsername(\"\");\n    setPassword(\"\");\n\n    if (!isLoggingIn) {\n      setRetyped(\"\");\n    }\n  };\n\n  const handleShowLogin = () => {\n    setShowLogin(true);\n  };\n\n  const handleCloseLogin = () => {\n    setErrorMessage(\"\");\n    setIsUsernameValid(true);\n    setIsPasswordValid(true);\n    setShowLogin(false);\n    clearInput(true);\n  };\n\n  const handleShowRegister = () => {\n    setShowRegister(true);\n  };\n\n  const handleCloseRegister = () => {\n    setErrorMessage(\"\");\n    setIsUsernameValid(true);\n    setIsPasswordValid(true);\n    setIsRetypedValid(true);\n    setShowRegister(false);\n    clearInput(false);\n  };\n\n  const isInputValid = (isLoggingIn) => {\n    //isLoggingIn can be true for validating during logging in or false for validating during registering\n\n    if (!isLoggingIn) {\n      if (retyped.length === 0) {\n        setIsRetypedValid(false);\n      } else {\n        setIsRetypedValid(true);\n      }\n    }\n\n    if (username.length === 0 || password.length === 0) {\n      if (username.length === 0) {\n        setIsUsernameValid(false);\n      } else {\n        setIsUsernameValid(true);\n      }\n\n      if (password.length === 0) {\n        setIsPasswordValid(false);\n      } else {\n        setIsPasswordValid(true);\n      }\n\n      setErrorMessage(\"\");\n      return false;\n    }\n\n    setIsUsernameValid(true);\n    setIsPasswordValid(true);\n\n    return true;\n  };\n\n  const handleChangeModal = () => {\n    handleCloseLogin();\n    handleShowRegister();\n  };\n\n  const handleLogin = () => {\n    if (!isInputValid(true)) {\n      return;\n    }\n\n    const url = \"http://localhost:3000/login\";\n\n    const login = { username: username, password: password };\n\n    axios\n      .post(url, login)\n      .then((res) => {\n        console.log(res.data);\n        if (res.data.token === \"\") {\n          setErrorMessage(\"Invalid username or password.\");\n        } else {\n          const userData = { username: username, token: res.data.token };\n          setUser(userData);\n          setIsLoggedin(true);\n          handleCloseLogin();\n        }\n      })\n      .catch((err) => {\n        console.err({ error: err });\n      });\n  };\n\n  const handleRegister = () => {\n    if (!isInputValid(false)) {\n      return;\n    }\n\n    if (password !== retyped) {\n      setErrorMessage(\"Passwords do not match\");\n      return;\n    }\n\n    const url = \"http://localhost:3000/register\";\n\n    const register = { username: username, password: password };\n\n    axios.post(url, register).catch((err) => {\n      console.err({ error: err });\n    });\n\n    handleCloseRegister();\n    handleShowMessage();\n    setIsRegistered(true);\n  };\n\n  const handleChange = (setter) => (e) => {\n    setter(e.target.value.trim());\n  };\n\n  // const handleEnterKey = (isLoggingIn) => {\n  //   return (event) => {\n  //     if (event.key === \"Enter\" && isLoggingIn) {\n  //       handleLogin();\n  //     } else if (event.key === \"Enter\" && !isLoggingIn) {\n  //       handleRegister();\n  //     }\n  //   };\n  // };\n\n  const handleShowLoggedInMessage = () => {\n    setShowRegisteredMessage(true);\n  };\n\n  const handleCloseLoggedInMessage = () => {\n    setShowRegisteredMessage(false);\n  };\n\n  const handleShowRegisteredMessage = () => {\n    setShowRegisteredMessage(true);\n  };\n\n  const handleCloseRegisteredMessage = () => {\n    setShowRegisteredMessage(false);\n  };\n\n  return (\n    <>\n      <StyledNavbar fixed=\"top\">\n        <Container>\n          <StyledBrand to=\"/\">Online Store</StyledBrand>\n\n          <StyledNav>\n            <StyledLink to=\"/for-him\">For Him</StyledLink>\n            <StyledLink to=\"/for-her\">For Her</StyledLink>\n          </StyledNav>\n\n          {user.username === \"\" ? (\n            <>\n              <StyledButton\n                variant=\"secondary\"\n                text=\"Login\"\n                onClick={handleShowLogin}\n              ></StyledButton>\n\n              <Modal show={showLogin} onHide={handleCloseLogin}>\n                <Modal.Header>\n                  <Modal.Title>Login</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                  <Form>\n                    <StyledGroup>\n                      <Form.Label>Username</Form.Label>\n                      {isUsernameValid ? (\n                        <Form.Control\n                          type=\"text\"\n                          value={username}\n                          onChange={handleChange(setUsername)}\n                        />\n                      ) : (\n                        <>\n                          <ErrorControl\n                            type=\"text\"\n                            value={username}\n                            onChange={handleChange(setUsername)}\n                          />\n                          <ErrorText>Username is empty</ErrorText>\n                        </>\n                      )}\n                    </StyledGroup>\n                    <StyledGroup>\n                      <Form.Label>Password</Form.Label>\n                      {isPasswordValid ? (\n                        <Form.Control\n                          type=\"password\"\n                          value={password}\n                          onChange={handleChange(setPassword)}\n                        />\n                      ) : (\n                        <>\n                          <ErrorControl\n                            type=\"password\"\n                            value={password}\n                            onChange={handleChange(setPassword)}\n                          />\n                          <ErrorText>Password is empty</ErrorText>\n                        </>\n                      )}\n                    </StyledGroup>\n\n                    <ClickableText onClick={handleChangeModal}>\n                      Register\n                    </ClickableText>\n                    {errorMessage !== \"\" ? (\n                      <>\n                        <p></p>\n                        <ErrorText>{errorMessage}</ErrorText>\n                      </>\n                    ) : null}\n                  </Form>\n                </Modal.Body>\n                <StyledFooter>\n                  <Button variant=\"danger\" onClick={handleCloseLogin}>\n                    Cancel\n                  </Button>\n                  <StyledButton\n                    variant=\"secondary\"\n                    text=\"Login\"\n                    onClick={handleLogin}\n                  />\n                </StyledFooter>\n              </Modal>\n              <Modal show={showRegister} onHide={handleCloseRegister}>\n                <Modal.Header>\n                  <Modal.Title>Register</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                  <Form>\n                    <StyledGroup>\n                      <Form.Label>Username</Form.Label>\n                      {isUsernameValid ? (\n                        <Form.Control\n                          type=\"text\"\n                          value={username}\n                          onChange={handleChange(setUsername)}\n                        />\n                      ) : (\n                        <>\n                          <ErrorControl\n                            type=\"text\"\n                            value={username}\n                            onChange={handleChange(setUsername)}\n                          />\n                          <ErrorText>Username is empty</ErrorText>\n                        </>\n                      )}\n                    </StyledGroup>\n                    <StyledGroup>\n                      <Form.Label>Password</Form.Label>\n                      {isPasswordValid ? (\n                        <Form.Control\n                          type=\"password\"\n                          value={password}\n                          onChange={handleChange(setPassword)}\n                        />\n                      ) : (\n                        <>\n                          <ErrorControl\n                            type=\"password\"\n                            value={password}\n                            onChange={handleChange(setPassword)}\n                          />\n                          <ErrorText>Password is empty</ErrorText>\n                        </>\n                      )}\n                    </StyledGroup>\n                    <StyledGroup>\n                      <Form.Label>Re-type Password</Form.Label>\n                      {isRetypedValid ? (\n                        <Form.Control\n                          type=\"password\"\n                          value={retyped}\n                          onChange={handleChange(setRetyped)}\n                        />\n                      ) : (\n                        <>\n                          <ErrorControl\n                            type=\"password\"\n                            value={retyped}\n                            onChange={handleChange(setRetyped)}\n                          />\n                          <ErrorText>Retyped password is empty</ErrorText>\n                        </>\n                      )}\n                    </StyledGroup>\n                    {errorMessage !== \"\" ? (\n                      <>\n                        <p></p>\n                        <ErrorText>{errorMessage}</ErrorText>\n                      </>\n                    ) : null}\n                  </Form>\n                </Modal.Body>\n                <StyledFooter>\n                  <Button variant=\"danger\" onClick={handleCloseRegister}>\n                    Cancel\n                  </Button>\n                  <StyledButton\n                    variant=\"secondary\"\n                    text=\"Register\"\n                    onClick={handleRegister}\n                  />\n                </StyledFooter>\n              </Modal>\n              <Modal show={showMessage} onHide={handleCloseMessage}>\n                <Modal.Header />\n                <Modal.Body>\n                  {isLoggedin ? (\n                    <SuccessText>Login successful</SuccessText>\n                  ) : null}\n                  {isRegistered ? (\n                    <SuccessText>Account successful registered</SuccessText>\n                  ) : null}\n                </Modal.Body>\n                <Modal.Footer>\n                  <StyledFooter>\n                    <Button variant=\"danger\" onClick={handleCloseMessage}>\n                      Close\n                    </Button>\n                    <StyledButton\n                      variant=\"secondary\"\n                      text=\"Login\"\n                      onClick={handleShowLogin}\n                    />\n                  </StyledFooter>\n                </Modal.Footer>\n              </Modal>\n            </>\n          ) : (\n            <Dropdown>\n              <StyledDropDown id=\"dropdown-basic\" variant=\"secondary\">\n                {user.username}\n              </StyledDropDown>\n\n              <Dropdown.Menu>\n                <StyledItem href=\"#/action-1\">Cart</StyledItem>\n                <StyledItem href=\"#/action-2\">Settings</StyledItem>\n                <Dropdown.Divider />\n                <StyledItem href=\"#/action-3\">Logout</StyledItem>\n              </Dropdown.Menu>\n            </Dropdown>\n          )}\n        </Container>\n      </StyledNavbar>\n      {props.children}\n      <Footer />\n    </>\n  );\n}\n\nexport default Panel;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,SAAS,EACTC,GAAG,EACHC,MAAM,EACNC,QAAQ,EACRC,KAAK,EACLC,IAAI,EACJC,MAAM,QACD,iBAAiB;AACxB,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9B,MAAMC,YAAY,GAAGhB,MAAM,CAACI,MAAM,CAAE;AACpC;AACA;AACA;AACA,CAAC;AAACa,EAAA,GAJID,YAAY;AAMlB,MAAME,WAAW,GAAGlB,MAAM,CAACS,OAAO,CAAE;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACU,GAAA,GAVID,WAAW;AAYjB,MAAME,SAAS,GAAGpB,MAAM,CAACG,GAAG,CAAE;AAC9B;AACA;AACA;AACA;AACA,CAAC;AAACkB,GAAA,GALID,SAAS;AAOf,MAAME,UAAU,GAAGtB,MAAM,CAACS,OAAO,CAAE;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACc,GAAA,GAxCID,UAAU;AA0ChB,MAAME,cAAc,GAAGxB,MAAM,CAACK,QAAQ,CAACoB,MAAM,CAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAjBIF,cAAc;AAmBpB,MAAMG,UAAU,GAAG3B,MAAM,CAACK,QAAQ,CAACuB,IAAI,CAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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"},"metadata":{},"sourceType":"module","externalDependencies":[]}